name: Secrets & Credentials
on: workflow_call
#env:
#   SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
#   SSH_HOST: ${{ secrets.HOST }} 
# jobs:
#   deploy:
#     name: "listing files"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure SSH
#         run: |
#           sudo apt-get update
#           mkdir -p ~/.ssh/
#           echo "${{ secrets.PRIVATE_KEY }}"
#       - name: configuring host and adding it to known_hosts list
#         run: |
#           ssh -tt -o StrictHostKeyChecking=no -i "${{ secrets.PRIVATE_KEY }}" ubuntu@"${{ secrets.HOST }} " 'hostname; exit'
#           ls -al
#           echo “VM logged in successfully”

jobs:
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USER }}
          SSH_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.HOST }}
          
          shell: bash
            ssh -i $SSH_KEY $SSH_USER@$SSH_HOST
      - name: hostname
        run: 'hostname; exit'
        

#       - name: Stop the server
#         run: ssh staging 'sudo systemctl stop my-application'

#       - name: Check out the source
#         run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

#       - name: Start the server
#         if: ${{ always() }}
#         run: ssh staging 'sudo systemctl start my-application'
